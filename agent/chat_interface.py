from agent.openai_agent import generate_response
from pinecone_module.pinecone_manager import search_similar_products

def interact_with_agent(query):
    """
    Busca productos en Pinecone antes de consultar a OpenAI, optimizando la respuesta.
    """
    print("\nü§ñ AI-SearchEngine: Buscando productos en Pinecone...")

    # Buscar productos en Pinecone
    similar_products = search_similar_products(query, top_k=5)

    if not similar_products:
        print("‚ùå No se encontraron productos similares en Pinecone.")
        prompt = f"""Un usuario est√° buscando: '{query}', pero la base de datos no tiene productos exactos para esa descripci√≥n.

En lugar de inventar productos, sugiere una soluci√≥n alternativa o pregunta si quiere explorar otra categor√≠a de productos que s√≠ est√©n disponibles.
"""
        response = generate_response(prompt)
    else:
        product_list = "\n".join(f"- {product}" for product in similar_products)
        prompt = f"""Estos son los productos m√°s relevantes encontrados en la base de datos para la consulta: '{query}'

{product_list}

Genera una respuesta profesional explicando por qu√© estos productos pueden ser √∫tiles para la necesidad del usuario. Si no hay coincidencias exactas, sugiere productos similares con una breve explicaci√≥n.
"""
        response = generate_response(prompt)

    print("\nüõí Productos recomendados:")
    print(response)

    return response
